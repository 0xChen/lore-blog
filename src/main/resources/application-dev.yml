### development environment ###

############ server ############
server:
  tomcat.uri-encoding: UTF-8
  port: 8080
  servlet.session.timeout: 0s

############# log ##############
logging:
  path: .\\log\\
  file.max-history: 2
  level:
    root: info
    sun.rmi: error

########## datasource ##########
# 配置属性列表详细说明 https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # Druid会自动根据url识别驱动类名，如果连接的数据库非常见数据库，才需配置属性 driver-class-name
      url: jdbc:mysql://127.0.0.1:3306/blog_dev
      connection-properties: useSSL=true;useUnicode=true;characterEncoding=utf-8;autoReconnect=true;zeroDateTimeBehavior=convertToNull;
      username: ${jdbc.dev.username}
      password: ${jdbc.dev.password}
      # 配置初始化大小、最小、最大
      initial-size: 10
      min-idle: 10
      max-active: 30
      # 获取连接等待超时的时间 ms
      max-wait: 60000
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # max-pool-prepared-statement-per-connection-size: 50 #如果使用PSCache则去掉此行注释
      # Destroy线程检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      time-between-eviction-runs-millis: 60000
      # 连接保持空闲而不被驱逐的最小时间
      min-evictable-idle-time-millis: 30000
      # 用来检测连接是否有效
      validation-query: select 'syc'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 启用的filter插件， stat,wall与wall,stat的不同顺序是有区别的，前者拦截检测的时间不在StatFilter统计的SQL执行时间内。
      filters: stat,wall,slf4j
      # 客制化filter
      filter:
        # 监控统计
        stat:
          log-slow-sql: true
          slow-sql-millis: 2000
          merge-sql: true
        # 防火墙
        wall:
          config:
            # 是否允许一次执行多条语句
            multi-statement-allow: true
            # 检查DELETE语句是否无where条件
            delete-where-none-check: true
            # 检查UPDATE语句是否无where条件
            update-where-none-check: true
          # 对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          # 对被认为是攻击的SQL抛出SQLException, development 环境无需抛出
          throw-exception: false
      # 如果有initialSize数量较多时，打开会加快应用启动时间
      async-init: true
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/monitor/*

######### mybatis-plus #########
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  # typeAliasesPackage: com.developerchen.blog.entity
  # typeEnumsPackage: com.developerchen.blog.entity.enums
  global-config:
    # 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"ID_WORKER (数字类型唯一ID)", 3:"全局唯一ID UUID", 4: NONE, 5: ID_WORKER_STR
    id-type: 2
    # 表名、字段名、是否使用下划线命名
    db-column-underline: true
    # 字段验证策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    # 刷新mapper 开发环境时打开方便调试
    refresh-mapper: true
    # SQL解析缓存 development环境下关闭
    sql-parser-cache: false
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false


